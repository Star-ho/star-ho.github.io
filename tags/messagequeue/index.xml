<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MessageQueue on Sungho's Dev BLog</title><link>https://sungho94.me/tags/messagequeue/</link><description>Recent content in MessageQueue on Sungho's Dev BLog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Thu, 15 Aug 2024 20:35:20 +0000</lastBuildDate><atom:link href="https://sungho94.me/tags/messagequeue/index.xml" rel="self" type="application/rss+xml"/><item><title>Exchange and binding</title><link>https://sungho94.me/p/exchange-and-binding/</link><pubDate>Thu, 15 Aug 2024 20:35:20 +0000</pubDate><guid>https://sungho94.me/p/exchange-and-binding/</guid><description>&lt;h2 id="exchange">Exchange
&lt;/h2>&lt;ul>
&lt;li>다양한 속성을 설정할 수 있음&lt;/li>
&lt;li>가장 중요한 옵션은 name, durablity, auto-delete(마지막 대기열이 해해제되면 자동 삭제됨), argument 임&lt;/li>
&lt;/ul>
&lt;h3 id="default-exchange">Default Exchange
&lt;/h3>&lt;ul>
&lt;li>브로커가 미리 선언한 이름이 없는 direct exchange&lt;/li>
&lt;li>간단한 애플리케이션에 매우 유용한 한가지 속성이 있는데, 생성되는 모든 큐는 큐 이름과 동일한 라우팅 키를 사용하여 자동으로 바인딩됨&lt;/li>
&lt;li>예를 들어 &amp;ldquo;search-indexing-online&amp;quot;이름의 큐를 선언하는 브로커는 &amp;ldquo;search-indexing-online&amp;quot;를 사용하여 기본 exchange에 해당 큐를 바인딩함&lt;/li>
&lt;/ul>
&lt;h3 id="direct-exchange">Direct Exchange
&lt;/h3>&lt;p>&lt;img src="https://sungho94.me/image/real-resource-image/Pasted%20image%2020240812233351.png"
loading="lazy"
alt="|center|700"
>&lt;/p>
&lt;ul>
&lt;li>메시지 라우팅 키를 기반으로 메시지를 대기열에 전달함&lt;/li>
&lt;li>메시지의 유니캐스트 라우팅에 이상적이지만, 멀티캐스트 라우팅에도 사용 가능함&lt;/li>
&lt;li>라우팅 키 K를 가진 queue가 라우팅 R을 가진 새 메시지가 direct exchange에 도착하면 교환은 K=R인경우 해당 대기열로 라우팅함&lt;/li>
&lt;li>동일한 라우팅 키 K를 가진 direct exchange가 여러개 있으면, Exchange는 K=R인 모든 대기열에 라우팅함&lt;/li>
&lt;/ul>
&lt;h3 id="fanout-exchange">Fanout Exchange
&lt;/h3>&lt;p>&lt;img src="https://sungho94.me/image/real-resource-image/Pasted%20image%2020240812233932.png"
loading="lazy"
alt="|center|700"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>바인딩된 모든 대기열로 메시지를 라우팅하며, 라우팅 키는 무시됨&lt;/p>
&lt;/li>
&lt;li>
&lt;p>N개의 queue가 Fanout Exchange에 바인딩 되어 있는경우, 새 메시지가 Exchange에 publish되면, 메시지의 사본이 모든 N개의 대기열에 전달됨&lt;/p>
&lt;/li>
&lt;li>
&lt;p>브로드 캐스트 라우팅에 이상적임&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fanout Exchange는 바인딩된 모든 queue에 메시지 사본을 전달하므로 사용 사례는 다들 비슷함&lt;/p>
&lt;ul>
&lt;li>대규모 멀티 온라인 게임에서 순위표 업데이트&lt;/li>
&lt;li>스포츠 뉴스 사이트에서 실시간으로 모바일 클라이언트에 점수 업데이트를 하는데 사용할 수 있음&lt;/li>
&lt;li>분산 시스템에서 다양한 상태 및 구성 업데이트에 사용될 수 있음&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="topic-exchange">Topic Exchange
&lt;/h3>&lt;ul>
&lt;li>라우팅 키와 대기열을 exchange에 바인딩하는데 사용된 패턴의 일치 여부에 따라 메시지를 하나 또는 여러개의 대기열로 라우팅함&lt;/li>
&lt;li>다양한 pub/sub패턴을 구현하는데 자주 사용됨&lt;/li>
&lt;li>일반적으로 멀티 캐스트 라우팅에 사용됨&lt;/li>
&lt;li>수신할 메시지 유형을 선택적으로 선택하는 여러 소비자/애플리케이션에 관련된 문제가 있을 떄마다 고려할 필요가 있음&lt;/li>
&lt;/ul>
&lt;h3 id="headers-exchange">Headers Exchange
&lt;/h3>&lt;ul>
&lt;li>라우팅 키 보다는 메시지 헤더로 더 쉽게 표현되는 여러 속성에 대한 라우팅을 위해 설계됨&lt;/li>
&lt;li>Headers Exchange는 라우팅 키속성을 무시함&lt;/li>
&lt;li>라우팅에 사용되는 속성을 헤더에서 가져옴&lt;/li>
&lt;li>헤더의 값이 바인딩시 지정된 값과 같으면 바인딩함&lt;/li>
&lt;li>일치하는 헤더를 2개이상 사용하여 대기열을 헤더 교환에 바인딩 할 수 있음&lt;/li>
&lt;li>브로커는 애플리케이션으로 부터 모두 일치 또는 일부만 일치하는 메시지를 고려햐기 위해 x-match 인수가 사용됨
&lt;ul>
&lt;li>x-match가 all이면 모든 값이 일치해야함&lt;/li>
&lt;li>x-match가 any면 하나라도 일치하면 됨&lt;/li>
&lt;li>x-match를 any-with-x또는 all-with-x로 설정하면 문자열 x-로 시작하는 헤더도 일치항목을 평가하는데 사용됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="binding">Binding
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>Exchange에서 메시지를 Queue로 라우팅 하기 위해 사용하는 규칙&lt;/p>
&lt;/li>
&lt;li>
&lt;p>일부 Exchange 유형해서 사용하는 라우팅 키 속성이 있을 수 있고, Exchange E가 메시지를 Queue Q로 라우팅하도록 지시하려면, Q를 E에 바인딩해야함&lt;/p>
&lt;/li>
&lt;li>
&lt;p>라우팅 키의 목적은 Exchange에 publish된 특정 메시지를 바인딩된 Queue로 라우팅하도록 선택하는것&lt;/p>
&lt;/li>
&lt;li>
&lt;p>라우팅 키는 필터와 같은 역할을함&lt;/p>
&lt;/li>
&lt;li>
&lt;p>이러한 방향지정 계층이 있으면 publishing을 직접 사용하여 구현하기 불가능하거나 매우 어려운 시나리오에 대해 Queue를 라우팅 할 수 있으면 중복작업이 줄어듬&lt;/p>
&lt;/li>
&lt;li>
&lt;p>메시지가 어떤 Queue로도 라우팅 할 수 없는경우, publisher가 설정한 메시지 특성에 따라 메시지가 삭제되거나, publisher에게 되돌아감&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Broker</title><link>https://sungho94.me/p/broker/</link><pubDate>Sat, 10 Aug 2024 23:49:41 +0000</pubDate><guid>https://sungho94.me/p/broker/</guid><description>&lt;h2 id="broker-관련-설정-메시지-브로커-설정-심층-분석">Broker 관련 설정: 메시지 브로커 설정 심층 분석
&lt;/h2>&lt;p>&lt;strong>Broker&lt;/strong>는 메시지 중개자 역할을 수행하며, Producer와 Consumer 간의 메시지 전달을 책임지는 핵심적인 구성 요소입니다. Broker의 설정은 시스템의 성능, 안정성, 확장성에 직접적인 영향을 미치므로 신중하게 설정해야 합니다.&lt;/p>
&lt;h3 id="주요-broker-설정-항목">주요 Broker 설정 항목
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Network 설정:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Binding:&lt;/strong> 어떤 Queue에 어떤 Exchange를 바인딩할지 설정&lt;/li>
&lt;li>&lt;strong>Virtual Host:&lt;/strong> 논리적인 분리된 환경 구성&lt;/li>
&lt;li>&lt;strong>Clustering:&lt;/strong> 여러 Broker를 연결하여 클러스터 구성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Queue 설정:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Durability:&lt;/strong> Queue의 지속성 설정 (메시지 유실 방지)&lt;/li>
&lt;li>&lt;strong>Auto-delete:&lt;/strong> 더 이상 사용되지 않는 Queue 자동 삭제&lt;/li>
&lt;li>&lt;strong>Exclusive:&lt;/strong> 단독 소비자만 접근 가능하게 설정&lt;/li>
&lt;li>&lt;strong>Message TTL:&lt;/strong> 메시지 유효 기간 설정&lt;/li>
&lt;li>&lt;strong>Dead-Letter Exchange:&lt;/strong> 처리 실패 메시지를 보낼 DLX 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Exchange 설정:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Type:&lt;/strong> Direct, Fanout, Topic, Headers 등 Exchange 타입 설정&lt;/li>
&lt;li>&lt;strong>Durability:&lt;/strong> Exchange의 지속성 설정&lt;/li>
&lt;li>&lt;strong>Auto-delete:&lt;/strong> 더 이상 사용되지 않는 Exchange 자동 삭제&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Message 설정:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Message Size:&lt;/strong> 최대 메시지 크기 설정&lt;/li>
&lt;li>&lt;strong>Message TTL:&lt;/strong> 메시지 유효 기간 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Performance 설정:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Prefetch Count:&lt;/strong> 소비자가 미리 가져올 메시지 수 설정&lt;/li>
&lt;li>&lt;strong>Concurrency:&lt;/strong> 동시에 처리할 메시지 수&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Security 설정:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Authentication:&lt;/strong> 인증 메커니즘 설정&lt;/li>
&lt;li>&lt;strong>Authorization:&lt;/strong> 권한 관리 설정&lt;/li>
&lt;li>&lt;strong>SSL/TLS:&lt;/strong> 보안 통신 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Monitoring 설정:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Metrics:&lt;/strong> 메트릭 수집 (메시지 처리량, 지연 시간 등)&lt;/li>
&lt;li>&lt;strong>Logging:&lt;/strong> 로그 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="broker-선택-시-고려-사항">Broker 선택 시 고려 사항
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>기능:&lt;/strong> 필요한 기능 (Durable, Transactional, Exactly-Once Delivery 등) 지원 여부&lt;/li>
&lt;li>&lt;strong>성능:&lt;/strong> 처리량, 지연 시간 등 성능 요구사항 충족 여부&lt;/li>
&lt;li>&lt;strong>확장성:&lt;/strong> 시스템 부하 증가에 따른 확장성&lt;/li>
&lt;li>&lt;strong>운영 편의성:&lt;/strong> 관리 도구, 모니터링 기능 등&lt;/li>
&lt;li>&lt;strong>커뮤니티:&lt;/strong> 활발한 커뮤니티 지원 여부&lt;/li>
&lt;/ul>
&lt;h3 id="주요-메시지-브로커-종류-및-특징">주요 메시지 브로커 종류 및 특징
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>RabbitMQ:&lt;/strong> 다양한 기능, 높은 확장성, 활발한 커뮤니티&lt;/li>
&lt;li>&lt;strong>Kafka:&lt;/strong> 고성능, 분산 시스템, 스트리밍 처리에 적합&lt;/li>
&lt;li>&lt;strong>ActiveMQ:&lt;/strong> 다양한 프로토콜 지원, 안정성&lt;/li>
&lt;li>&lt;strong>Amazon SQS:&lt;/strong> 클라우드 기반, 쉽고 빠른 설정&lt;/li>
&lt;li>&lt;strong>Google Pub/Sub:&lt;/strong> 클라우드 기반, 스케일링 용이&lt;/li>
&lt;/ul></description></item></channel></rss>